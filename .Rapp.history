rm$census_block = as.character(rm$census_block)
rm$census_tract = as.character(rm$census_tract)
rm = rm[!is.na(rm$census_block),]
rm = rm[!is.na(rm$census_tract),]
rm = subset(rm, select=c("census_block", "census_tract", "finish_date", "species2", "work_order_id"))
length(unique(st$species))
rm(list=ls())
library("plyr")
setwd("~/Dropbox/GitRepository/ParksDataDive2012/")
clean up street trees
st = read.csv("streettrees_export.csv")
st$census_block = as.character(st$census_block)
st$census_tract = as.character(st$census_tract)
st = st[!is.na(st$census_block),]
st = rm[!is.na(st$census_tract),]
st = subset(st, select=c("cartodb_id", "census_block", "census_tract", "species"))
rm = read.csv("workorders_export.csv")
rm$census_block = as.character(rm$census_block)
rm$census_tract = as.character(rm$census_tract)
rm = rm[!is.na(rm$census_block),]
rm = rm[!is.na(rm$census_tract),]
rm = subset(rm, select=c(
"census_block",
"census_tract",
"finish_date",
"species2",
"work_order_id")
)
rm(list=ls())
library("plyr")
setwd("~/Dropbox/GitRepository/ParksDataDive2012/")
clean up street trees
st = read.csv("streettrees_export.csv")
st$census_block = as.character(st$census_block)
st$census_tract = as.character(st$census_tract)
st = st[!is.na(st$census_block),]
st = st[!is.na(st$census_tract),]
head(st)
rm(list=ls())
library("plyr")
setwd("~/Dropbox/GitRepository/ParksDataDive2012/")
clean up street trees
st = read.csv("streettrees_export.csv")
st$census_block = as.character(st$census_block)
st$census_tract = as.character(st$census_tract)
st = st[!is.na(st$census_block),]
st = st[!is.na(st$census_tract),]
st = subset(st,
select=c(
"cartodb_id",
"census_block",
"census_tract",
"species",
"season"
)
rm = read.csv("workorders_export.csv")
rm$census_block = as.character(rm$census_block)
rm$census_tract = as.character(rm$census_tract)
rm = rm[!is.na(rm$census_block),]
rm = rm[!is.na(rm$census_tract),]
rm = subset(rm,
select=c(
"census_block",
"census_tract",
"finish_date",
"species2",
"work_order_id")
)
cross over season to date
season = sort(unique(st$season))
rm(list=ls())
library("plyr")
setwd("~/Dropbox/GitRepository/ParksDataDive2012/")
clean up street trees
st = read.csv("streettrees_export.csv", stringsAsFactors=F)
st$census_block = as.character(st$census_block)
st$census_tract = as.character(st$census_tract)
st = st[!is.na(st$census_block),]
st = st[!is.na(st$census_tract),]
st = subset(st,
select=c(
"cartodb_id",
"census_block",
"census_tract",
"species",
"season"
)
rm = read.csv("workorders_export.csv", stringsAsFactors=F)
st = subset(st,
select=c(
"cartodb_id",
"census_block",
"census_tract",
"species",
"season")
)
rm = read.csv("workorders_export.csv", stringsAsFactors=F)
rm$census_block = as.character(rm$census_block)
rm$census_tract = as.character(rm$census_tract)
rm = rm[!is.na(rm$census_block),]
rm = rm[!is.na(rm$census_tract),]
rm = subset(rm,
select=c(
"census_block",
"census_tract",
"finish_date",
"species2",
"work_order_id")
)
head(rm)
rm$finish_date
rm = rm$finish_date[which(rm$finish_date="")]
rm = rm$finish_date[which(rm$finish_date!="")]
head(rm)
gsub("[0-9]+:[0-9]+","". rm$finish_date)
gsub("[0-9]+:[0-9]+","", rm$finish_date)
rm = read.csv("workorders_export.csv", stringsAsFactors=F)
rm$census_block = as.character(rm$census_block)
rm$census_tract = as.character(rm$census_tract)
rm = rm[!is.na(rm$census_block),]
rm = rm[!is.na(rm$census_tract),]
rm = subset(rm,
select=c(
"census_block",
"census_tract",
"finish_date",
"species2",
"work_order_id")
)
rm = rm[which(rm$finish_date!=""),]
gsub("[0-9]+:[0-9]+","", rm$finish_date)
library("stringr")
str_trim(gsub("[0-9]+:[0-9]+","", rm$finish_date))
rm$finish_date = str_trim(gsub("[0-9]+:[0-9]+","", rm$finish_date))
rm$finish_date = as.Date(rm$finish_date, "%m/%d/%y")
rm$finish_date = as.Date(rm$finish_date, "%m/%d/%y")
rm$finish_date
head(rm)
rm$species2
head(st)
season = sort(unique(st$season))
head(season)
season
mergedf = data.frame(season, date, stringsAsFactors=F)
st = subset(st,
select=c(
"cartodb_id",
"census_block",
"census_tract",
"species",
"season")
)
season = sort(unique(st$season))
date = c(
"2005-06-01",
"2005-12-01",
"2006-12-01",
"2007-06-01",
"2007-12-01",
"2008-12-01",
"2009-06-01",
"2009-12-01",
"2010-12-01",
"2011-12-01",
"2006-06-01",
"2007-06-01",
"2008-06-01",
"2009-06-01",
"2009-12-01"
)
mergedf = data.frame(season, date, stringsAsFactors=F)
st = join(mergedf, st, type="right", by="season")
head(st)
season = sort(unique(st$season))
head(season)
head(st)
sort(unique(st$species))
species = sort(unique(st$species))
sort(table(st$census_block))
as.numeric(sort(table(st$census_block)))
plot(density(as.numeric(sort(table(st$census_block))))
plot(density(as.numeric(sort(table(st$census_block)))))
plot(density(as.numeric(sort(table(st$census_block)))))
ncol = length(species) + length(census_block) + length(date)
census_block = sort(unique(st$census_block))
census_block = sort(unique(st$census_block))
ncol = length(species) + length(census_block) + length(date)
ncol
ncol = length(species) + 2
shell_df = data.frame(matrix(0, nrow=1, ncol=ncol)
shell_df = data.frame(matrix(0, nrow=1, ncol=ncol))
shell_df = data.frame(matrix(0, nrow=1, ncol=ncol))
shell_df
names(shell_df) = c("date", "census_block", species)
n_blocks = length(census_block)
n_blocks
rm_of_i = rm[which(rm$census_block==census_block[1]),]
rm_of_i
st_of_i
st_of_i = st[which(st$census_block==census_block[1]),]
st_of_i
start_st = st_of_i[which(st$season=="2005 TREE CENSUS"),]
start_st = st_of_i[which(st$season=="2005 TREE CENSUS"),]
start_st
st_of_i = st[which(st$census_block==census_block[1]),]
st_of_i
start_st = st_of_i[which(st$season=="2005 TREE CENSUS"),]
start_st
start_st = st_of_i[which(st_of_i$season=="2005 TREE CENSUS"),]
start_st
table(start_st$species)
data.frame(table(start_st$species))
names(table_of_st_of_i) = c("species", "count")
table_of_st_of_i = data.frame(table(start_st$species))
names(table_of_st_of_i) = c("species", "count")
table_of_st_of_i
n_species_start = nrow(table_of_st_of_i)
table_of_st_of_i[s,]
vec = grep(species_s$species, names(shell_df))
table_of_st_of_i = data.frame(table(start_st$species))
names(table_of_st_of_i) = c("species", "count")
n_species_start = nrow(table_of_st_of_i)
for(s in 1:n_species_start){
species_s = table_of_st_of_i[s,]
vec = grep(species_s$species, names(shell_df))
shell_df[,vec] = species_s$count
}
shell_df
vec = match(species_s$species, names(shell_df))
shell_df[,vec] = species_s$count
vec
for(s in 1:n_species_start){
species_s = table_of_st_of_i[s,]
vec = match(species_s$species, names(shell_df))
shell_df[,vec] = species_s$count
}
shell_df
names(shell_df)
st_of_i
shell_df$census_block = start_st$census_block[1]
shell_df$census_block = start_st$date[1]
shell_df
shell_df$date = start_st$date[1]
shell_df$census_block = start_st$census_block[1]
shell_df
st_of_i = st[order(st$date),]
st_of_i = st[order(st$date),]
df = rbind.fill(st, rm)
head(df)
rm[,-"finish_date"]
